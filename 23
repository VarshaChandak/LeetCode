/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode mergeKLists(ListNode[] lists) {
        List<Integer> res = new ArrayList<>();
        for(ListNode list : lists){
            while(list != null){
                res.add(list.val);
                list = list.next;
            }
        }
        Collections.sort(res);
        if(res.size() == 0){
            return null;
        }
        ListNode head = new ListNode(res.get(0));
        ListNode temp = head;

        for(int i = 1;i < res.size() ;i++){
            temp.next = new ListNode(res.get(i));
            temp = temp.next;
        }

        return head;


    }
}
