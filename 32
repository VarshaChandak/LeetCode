class Solution {
    public int longestValidParentheses(String s) {
        // return solveHelper(s);

        return helper(s);
    }
    private int helper(String s) {
        int count = 0;
        // Calculate from the front
        int leftPar = 0, rightPar = 0;
        for (char ch : s.toCharArray()) {
            if (ch == '(') {
                leftPar++;
            } else {
                rightPar++;
            }

            if (leftPar == rightPar) {
                count = Math.max(count, rightPar * 2);
            } else if (rightPar > leftPar) {
                leftPar = rightPar = 0;
            }
        }

        // calculate from the back
        leftPar = rightPar = 0;
        for (int i = s.length() - 1; i >= 0; i--) {
            if (s.charAt(i) == '(') {
                leftPar++;
            } else {
                rightPar++;
            }

            if (leftPar == rightPar) {
                count = Math.max(count, leftPar * 2);
            } else if (leftPar > rightPar) {
                leftPar = rightPar = 0;
            }
        }
        return count;
    }
}
